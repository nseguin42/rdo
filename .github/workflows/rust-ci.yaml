name: Rust CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  startup:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["push"]'
          paths_ignore: '[ "README.md", "LICENSE", ".gitignore", ".github/**", ".rustfmt.toml" ]'
          paths_filter: |
            build:
              paths:
                - Cargo.toml
                - Cargo.lock
                - src/**
                - tests/**
  rust_setup:
    needs: startup
    if: needs.check.outputs.should_skip != 'true' || !fromJSON(needs.check.outputs.paths_result).build.should_skip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2

  lint:
    needs: rust_setup
    uses: ./.github/workflows/rust-lint.yaml
  
  build_dev:
    needs: lint
    if: github.ref == 'refs/heads/dev'
    uses: ./.github/workflows/rust-build-dev.yaml
    secrets: inherit

  build_main:
    needs: lint
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/rust-build-main.yaml
    secrets: inherit