name: Rust CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          skip_after_successful_duplicate: 'true'
          do_not_skip: '["push"]'
          paths_ignore: '[ "README.md", "LICENSE", ".gitignore", ".github/**", ".rustfmt.toml" ]'
          paths_filter: |
            build:
              paths:
                - Cargo.toml
                - Cargo.lock
                - src/**
                - tests/**
  build:
    needs: pre_job
    if: needs.pre_job.outputs.should_skip != 'true' || !fromJSON(needs.pre_job.outputs.paths_result).build.should_skip
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install toolchain
        run: rustup toolchain install stable --profile minimal

      - uses: Swatinem/rust-cache@v2

      - uses: ./.github/actions/rust-lint.yaml

      - uses: ./.github/workflows/bump-tag.yaml
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Build (Development)
        if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
        uses: ./.github/workflows/rust-build-and-test.yaml
        with:
          build_type: dev

      - name: Build (Release)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: ./.github/workflows/rust-build-and-release.yaml
        with:
          build_type: release