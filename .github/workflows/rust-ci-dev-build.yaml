name: Rust CI (dev, build)

on:
  push:
    branches:
      - dev

env:
  CARGO_TERM_COLOR: always

jobs:
  startup:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      paths_result: ${{ steps.skip_check.outputs.paths_result }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          skip_after_successful_duplicate: 'true'
          paths_ignore: '[ "README.md", "LICENSE", ".gitignore", ".github/**", ".rustfmt.toml" ]'
          paths_filter: |
            build:
              paths:
                - Cargo.toml
                - Cargo.lock
                - src/**
                - tests/**

  build:
    needs: startup
    if: needs.check.outputs.should_skip != 'true' || !fromJSON(needs.check.outputs.paths_result).build.should_skip
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            archive: tar.gz tar.xz tar.zst
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust toolchain
        run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: cargo test
        run: cargo test
      - name: cargo build --release --locked --all-features
        run: cargo build --release --locked --all-features
      - name: package
        run: |
          mkdir -p target/release
          cmd="tar -cJf target/release/${{ matrix.target }}.tar.xz -C target/release/ ."
          echo $cmd
          $cmd
      - name: upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dev-release-artifacts
          path: |
            target/release/${{ matrix.target }}.*
            LICENSE
            README.md